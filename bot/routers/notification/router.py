from asyncio.log import logger
from bot.main import bot
from config.config import MY_CHAT_ID
from datetime import datetime, timedelta
import pytz



async def send_day_notification():
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"""
    try:
        utc_now = datetime.now(pytz.utc)
        bishkek_now = utc_now.astimezone(pytz.timezone('Asia/Bishkek'))

        # Calculate days remaining until the end of the month
        next_month = bishkek_now.replace(day=28) + timedelta(days=4)
        last_day_of_month = next_month - timedelta(days=next_month.day)
        days_remaining = (last_day_of_month - bishkek_now).days

        data = (
            f"üîî –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n"
            f"UTC: {utc_now}\n"
            f"Bishkek: {bishkek_now}\n\n"
            f"–î–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞ –æ—Å—Ç–∞–ª–æ—Å—å: {days_remaining} –¥–Ω–µ–π"
        )

        await bot.send_message(chat_id=MY_CHAT_ID, text=data)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")


async def send_end_month_notification():
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞"""
    try:
        utc_now = datetime.now(pytz.utc)
        bishkek_now = utc_now.astimezone(pytz.timezone('Asia/Bishkek'))

        data = (
            f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞!!\n"
            f"UTC: {utc_now}\n"
            f"Bishkek: {bishkek_now}"
        )

        await bot.send_message(chat_id=MY_CHAT_ID, text=data)
        await bot.send_message(chat_id=MY_CHAT_ID, text="seiko binar –Ω–∞–¥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")